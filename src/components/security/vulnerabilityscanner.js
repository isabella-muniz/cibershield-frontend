// frontend/src/components/security/VulnerabilityScanner.js
import { useState } from 'react';

export default function VulnerabilityScanner() {
  const [url, setUrl] = useState('');
  const [scanning, setScanning] = useState(false);
  const [results, setResults] = useState(null);
  const [error, setError] = useState(null);

  const handleScan = async (e) => {
    e.preventDefault();
    setScanning(true);
    setError(null);

    try {
      const response = await fetch('/api/security/scan', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ url }),
      });

      const data = await response.json();
      setResults(data);
    } catch (err) {
      setError('Erro ao realizar o scan');
    } finally {
      setScanning(false);
    }
  };

  return (
    <div>
      <h2 className="text-2xl font-bold mb-4">Scanner de Vulnerabilidades</h2>
      <form onSubmit={handleScan} className="space-y-4">
        <div>
          <input
            type="url"
            value={url}
            onChange={(e) => setUrl(e.target.value)}
            placeholder="Digite a URL para escanear"
            className="w-full px-4 py-2 border rounded-lg"
            required
          />
        </div>
        <button
          type="submit"
          disabled={scanning}
          className="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 disabled:bg-gray-400"
        >
          {scanning ? 'Escaneando...' : 'Iniciar Scan'}
        </button>
      </form>

      {error && (
        <div className="mt-4 p-4 bg-red-100 text-red-700 rounded-lg">
          {error}
        </div>
      )}

      {results && (
        <div className="mt-4 space-y-4">
          <h3 className="text-xl font-semibold">Resultados do Scan</h3>
          {results.vulnerabilities.map((vuln, index) => (
            <div
              key={index}
              className="p-4 bg-white shadow rounded-lg"
            >
              <div className="font-bold">{vuln.type}</div>
              <div>Severidade: {vuln.severity}</div>
              <div>{vuln.description}</div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}